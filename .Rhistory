ggplot(filtered_data, aes(x = Family_Number, y = Size, color = Treatment)) +
geom_boxplot(outlier.color = "grey", notch = TRUE) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(size = 8)) +
ylab("Size (microns)") +
xlab("Family") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#x-axis orders not correct
#order as appears on data sheet (don't follow base R rules)
Data$Family_Number <- factor(Data$Family_Number, levels = family_levels)
family_levels <- unique(Data$Family_Number)
#order as appears on data sheet (don't follow base R rules)
Data$Family_Number <- factor(Data$Family_Number, levels = family_levels)
ggplot(Data, aes(x = Family_Number, y = Size, color = Treatment)) +
geom_boxplot(outlier.color = "grey", notch = TRUE) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(size = 8)) +
ylab("Size (microns)") +
xlab("Family_Number")
ggplot(Data, aes(x = Family_Number, y = Size, color = Treatment)) +
geom_boxplot(outlier.color = "grey", notch = TRUE) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(size = 8)) +
ylab("Size (microns)") +
xlab("Family") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
filtered_data <- Data %>%
filter(!(Family_Number %in% c("133", "134", "135", "136", "137", "138")))
ggplot(filtered_data, aes(x = Family_Number, y = Size, color = Treatment)) +
geom_boxplot(outlier.color = "grey", notch = TRUE) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(size = 8)) +
ylab("Size (microns)") +
xlab("Family") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
filtered_data <- Data %>%
filter(!(Family_Number %in% c("89", "90", "133", "134", "135", "136", "137", "138")))
ggplot(filtered_data, aes(x = Family_Number, y = Size, color = Treatment)) +
geom_boxplot(outlier.color = "grey", notch = TRUE) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(size = 8)) +
ylab("Size (microns)") +
xlab("Family") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ordered_avg_data_DW$Family_text <- factor(ordered_avg_data_DW$Family_text,
levels = ordered_avg_data_DW$Family_text)
# Plot the data with the families ordered by average size
ggplot(ordered_avg_data_DW, aes(x = Family_text, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
scale_fill_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ordered_avg_data_DW$Family_Number <- factor(ordered_avg_data_DW$Family_Number,
levels = ordered_avg_data_DW$Family_Number)
avg_data <- Data %>%
group_by(Family_Number, Treatment) %>%
summarise(
Avg_Size = mean(Size),
SD_Size = sd(Size),
.groups = 'drop'
)
ordered_avg_data_DW$Family_Number <- factor(ordered_avg_data_DW$Family_Number,
levels = ordered_avg_data_DW$Family_Number)
avg_data
avg_data <- Data %>%
group_by(Family_Number, Treatment) %>%
summarise(
Avg_Size = mean(Size),
SD_Size = sd(Size),
.groups = 'drop'
)
ordered_avg_data_DW <- avg_data %>%
filter(Treatment == "DW") %>%
arrange(desc(Avg_Size))
ordered_avg_data_DW
ordered_avg_data_DW$Family_Number <- factor(ordered_avg_data_DW$Family_Number,
levels = ordered_avg_data_DW$Family_Number)
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
scale_fill_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
stat_summary(avg_data = "SD_Size", geom = "errorbar", width = 0.5)
scale_fill_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
geom_errorbar(data = avg_data, aes(x = Family_Number, ymin = Avg_Size - SD, ymax = Avg_Size + SD), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
geom_errorbar(data = avg_data, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red", "blue")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size, fill = Treatment)) +
geom_boxplot() +
geom_errorbar(data = avg_data, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot() +
geom_errorbar(data = avg_data, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ordered_avg_data_DW
View(ordered_avg_data_DW)
ordered_avg_data_DW <- na.omit(ordered_avg_data_DW)
View(ordered_avg_data_DW)
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot() +
geom_errorbar(data = avg_data, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot() +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
scale_fill_manual(values = c("red")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "red", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
ordered_avg_data_SW <- na.omit(ordered_avg_data_SW)
View(ordered_avg_data_SW)
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Average Size") +
xlab("Family")
#add colour for treatment (red = DW)
ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
avg_data <- Data %>%
group_by(Family_Number, Treatment) %>%
summarise(
Avg_Size = mean(Size),
SD_Size = sd(Size),
.groups = 'drop'
)
ordered_avg_data_SW <- avg_data %>%
filter(Treatment == "SW") %>%
arrange(desc(Avg_Size))
ordered_avg_data_SW <- na.omit(ordered_avg_data_SW)
ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
ordered_avg_data_SW <- avg_data %>%
filter(Treatment == "SW") %>%
arrange(desc(Avg_Size))
ordered_avg_data_SW <- na.omit(ordered_avg_data_SW)
ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
ordered_avg_data_SW
ordered_avg_data_SW$Family_Number <- factor(ordered_avg_data_SW$Family_Number,
levels = ordered_avg_data_SW$Family_Number)
ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
library(gridExtra)
plot2 <- ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "Blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
# Assuming you have two ggplot objects named plot1 and plot2
grid.arrange(plot1, plot2, nrow = 1)
# Assuming you have two ggplot objects named plot1 and plot2
grid.arrange(plot1, plot2, ncol = 1)
plot2 <- ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "red", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family")
# Assuming you have two ggplot objects named plot1 and plot2
grid.arrange(plot1, plot2, ncol = 1)
# Assuming you have two ggplot objects named plot1 and plot2
combined_plots <- grid.arrange(plot1, plot2, ncol = 1)
legend <- cowplot::get_legend(plot1)  # Extract the legend from one of the plots
combined_plots_with_legend <- cowplot::plot_grid(combined_plots, legend, ncol = 2, rel_widths = c(1, 0.2))
combined_plots_with_legend
combined_plots +
scale_fill_manual(values = c("blue" = "red"), name = "Treatment", labels = c("SW", "DW"))
plot1 <- plot1 + scale_fill_manual(values = c("blue" = "red"), name = "Treatment", labels = c("SW", "DW"))
# Combine the modified plots and specify the layout of the scale
final_combined_plot <- plot_grid(plot1, plot2, ncol = 1, rel_heights = c(1, 1, 0.2))
plot1 <- plot1 + scale_fill_manual(values = c("blue" = "red"), name = "Treatment", labels = c("SW", "DW"))
# Combine the modified plots and specify the layout of the scale
final_combined_plot <- grid_arrange(plot1, plot2, ncol = 1, rel_heights = c(1, 1, 0.2))
plot1 <- plot1 + scale_fill_manual(values = c("blue" = "red"), name = "Treatment", labels = c("SW", "DW"))
# Combine the modified plots and specify the layout of the scale
final_combined_plot <- grid.arrange(plot1, plot2, ncol = 1, rel_heights = c(1, 1, 0.2))
library(gridExtra)
library(ggplot2)
# Suppose you have two plots named plot1 and plot2
# Add the custom legend directly to the combined plot
combined_plot <- grid.arrange(plot1, plot2, ncol = 1)
# Create a custom legend as a separate ggplot
custom_legend <- ggplot() +
guides(fill = guide_legend(title = "Legend Title")) +  # Customize the legend title
theme(legend.position = "right")  # Adjust the position of the legend
# Arrange the combined plot and the custom legend
final_combined_plot <- grid.arrange(combined_plot, custom_legend, ncol = 2, widths = c(3, 1))
#add colour for treatment (blue = SW) and remove gridlines
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
title(main = "Surface water")
#add colour for treatment (red = DW)
plot2 <- ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "red", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
title(main= "Deep water")
# Assuming you have two ggplot objects named plot1 and plot2
combined_plots <- grid.arrange(plot1, plot2, ncol = 1)
plot1
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
title(main = "Surface water")
plot1
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
ggtitle(main = "Surface water")
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
ggtitle("Surface water")
plot2 <- ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "red", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +  # Remove gridlines
ylab("Average Size") +
xlab("Family") +
ggtitle("Deep water")
# Assuming you have two ggplot objects named plot1 and plot2
combined_plots <- grid.arrange(plot1, plot2, ncol = 1)
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank() +
plot.title = element_text(hjust = 0.5))
#add colour for treatment (blue = SW) and remove gridlines
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)) +  # Centering the plot title
ylab("Average Size") +
xlab("Family") +
ggtitle("Surface water")
plot2 <- ggplot(ordered_avg_data_DW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "red", size = 1) +
geom_errorbar(data = ordered_avg_data_DW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)) +
ylab("Average Size") +
xlab("Family") +
ggtitle("Deep water")
# Assuming you have two ggplot objects named plot1 and plot2
combined_plots <- grid.arrange(plot1, plot2, ncol = 1)
plot1 <- ggplot(ordered_avg_data_SW, aes(x = Family_Number, y = Avg_Size)) +
geom_boxplot(fill = "white", color = "blue", size = 1) +
geom_errorbar(data = ordered_avg_data_SW, aes(x = Family_Number, ymin = Avg_Size - SD_Size, ymax = Avg_Size + SD_Size), width = 0.4, position = position_dodge(0.9)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5)) +
ylab("Average Size") +
xlab("") +
ggtitle("Surface water")
# Assuming you have two ggplot objects named plot1 and plot2
combined_plots <- grid.arrange(plot1, plot2, ncol = 1)
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size)) +
geom_boxplot()
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size)) +
geom_boxplot() +
theme_bw()
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw()
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw() +
xlab("Avergae Size (microns)")
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw() +
xlab("Avergae Size (microns)")
ggplot(data = avg_data_classified, aes(x = Size_Category, y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw() +
ylab("Avergae Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw() +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.grid = element_blank()) +
theme_bw() +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme(panel.grid = element_blank()) +
theme_bw() +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set3") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set4") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set5") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Accent") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "BrBG") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "PiYG") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
ggplot(data = avg_data_classified, aes(x = factor(Size_Category, levels = c("R", "MR", "S")), y = Avg_Size, fill = Size_Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Spectral") +  # Using the Set1 color palette from RColorBrewer
theme_bw() +
theme(panel.grid = element_blank()) +
ylab("Average Size (microns)") +
xlab("")
